{
	"info": {
		"_postman_id": "2f4334b3-582c-4e2f-8534-7df550cc6916",
		"name": "My API testing collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26474808",
		"_collection_link": "https://www.postman.com/aviation-specialist-9570199/workspace/my-api-testing/collection/26474808-2f4334b3-582c-4e2f-8534-7df550cc6916?action=share&creator=26474808&source=collection_link"
	},
	"item": [
		{
			"name": "create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"UserId\", jsonData.id);\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202, 200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Name is string\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.be.a('String');\r",
							"});\r",
							"\r",
							"pm.test(\"Gender is male or famale only\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.gender).to.be.oneOf([\"male\", \"female\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Age is between 0 and 100\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.be.above(0);\r",
							"    pm.expect(jsonData.age).to.be.below(100);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"age\": 25,\r\n    \"gender\": \"male\",\r\n    \"city\": \"{{$randomCity}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "show created user's data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users?id={{UserId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "id",
							"value": "{{UserId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update user profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Name changed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.equal(\"Anton Lashko QA\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{UserId}}\",\r\n    \"name\": \"Anton Lashko QA\",\r\n    \"gender\": \"male\",\r\n    \"age\": 25,\r\n    \"city\": \"Kyiv\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Message is User is deleted\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User is deleted\");\r",
							"});\r",
							"\r",
							"postman.clearEnvironmentVariable(\"UserId\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/users?id={{UserId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "id",
							"value": "{{UserId}}"
						}
					]
				}
			},
			"response": []
		}
	]
}